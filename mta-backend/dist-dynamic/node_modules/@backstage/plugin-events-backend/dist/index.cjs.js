'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var HttpPostIngressEventPublisher = require('./cjs/HttpPostIngressEventPublisher-6e928c08.cjs.js');
require('@backstage/backend-common');
require('express');
require('express-promise-router');

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class EventsBackend {
  constructor(logger) {
    __publicField(this, "eventBroker");
    __publicField(this, "publishers", []);
    __publicField(this, "subscribers", []);
    this.eventBroker = new HttpPostIngressEventPublisher.DefaultEventBroker(logger);
  }
  setEventBroker(eventBroker) {
    this.eventBroker = eventBroker;
    return this;
  }
  addPublishers(...publishers) {
    this.publishers.push(...publishers.flat());
    return this;
  }
  addSubscribers(...subscribers) {
    this.subscribers.push(...subscribers.flat());
    return this;
  }
  /**
   * Wires up and returns all component parts of the event management.
   */
  async start() {
    this.eventBroker.subscribe(this.subscribers);
    this.publishers.forEach(
      (publisher) => publisher.setEventBroker(this.eventBroker)
    );
  }
}

exports.DefaultEventBroker = HttpPostIngressEventPublisher.DefaultEventBroker;
exports.HttpPostIngressEventPublisher = HttpPostIngressEventPublisher.HttpPostIngressEventPublisher;
exports.EventsBackend = EventsBackend;
//# sourceMappingURL=index.cjs.js.map
