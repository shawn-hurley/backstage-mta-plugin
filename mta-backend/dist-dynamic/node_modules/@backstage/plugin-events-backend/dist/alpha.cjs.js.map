{"version":3,"file":"alpha.cjs.js","sources":["../src/service/EventsPlugin.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createBackendPlugin,\n  coreServices,\n} from '@backstage/backend-plugin-api';\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport {\n  eventsExtensionPoint,\n  EventsExtensionPoint,\n} from '@backstage/plugin-events-node/alpha';\nimport {\n  EventBroker,\n  EventPublisher,\n  EventSubscriber,\n  HttpPostIngressOptions,\n} from '@backstage/plugin-events-node';\nimport { DefaultEventBroker } from './DefaultEventBroker';\nimport Router from 'express-promise-router';\nimport { HttpPostIngressEventPublisher } from './http';\n\nclass EventsExtensionPointImpl implements EventsExtensionPoint {\n  #eventBroker: EventBroker | undefined;\n  #httpPostIngresses: HttpPostIngressOptions[] = [];\n  #publishers: EventPublisher[] = [];\n  #subscribers: EventSubscriber[] = [];\n\n  setEventBroker(eventBroker: EventBroker): void {\n    this.#eventBroker = eventBroker;\n  }\n\n  addPublishers(\n    ...publishers: Array<EventPublisher | Array<EventPublisher>>\n  ): void {\n    this.#publishers.push(...publishers.flat());\n  }\n\n  addSubscribers(\n    ...subscribers: Array<EventSubscriber | Array<EventSubscriber>>\n  ): void {\n    this.#subscribers.push(...subscribers.flat());\n  }\n\n  addHttpPostIngress(options: HttpPostIngressOptions) {\n    this.#httpPostIngresses.push(options);\n  }\n\n  get eventBroker() {\n    return this.#eventBroker;\n  }\n\n  get publishers() {\n    return this.#publishers;\n  }\n\n  get subscribers() {\n    return this.#subscribers;\n  }\n\n  get httpPostIngresses() {\n    return this.#httpPostIngresses;\n  }\n}\n\n/**\n * Events plugin\n *\n * @alpha\n */\nexport const eventsPlugin = createBackendPlugin({\n  pluginId: 'events',\n  register(env) {\n    const extensionPoint = new EventsExtensionPointImpl();\n    env.registerExtensionPoint(eventsExtensionPoint, extensionPoint);\n\n    env.registerInit({\n      deps: {\n        config: coreServices.rootConfig,\n        logger: coreServices.logger,\n        router: coreServices.httpRouter,\n      },\n      async init({ config, logger, router }) {\n        const winstonLogger = loggerToWinstonLogger(logger);\n\n        const ingresses = Object.fromEntries(\n          extensionPoint.httpPostIngresses.map(ingress => [\n            ingress.topic,\n            ingress as Omit<HttpPostIngressOptions, 'topic'>,\n          ]),\n        );\n\n        const http = HttpPostIngressEventPublisher.fromConfig({\n          config,\n          ingresses,\n          logger: winstonLogger,\n        });\n        const eventsRouter = Router();\n        http.bind(eventsRouter);\n        router.use(eventsRouter);\n\n        const eventBroker =\n          extensionPoint.eventBroker ?? new DefaultEventBroker(winstonLogger);\n\n        eventBroker.subscribe(extensionPoint.subscribers);\n        [extensionPoint.publishers, http]\n          .flat()\n          .forEach(publisher => publisher.setEventBroker(eventBroker));\n      },\n    });\n  },\n});\n"],"names":["createBackendPlugin","eventsExtensionPoint","coreServices","loggerToWinstonLogger","HttpPostIngressEventPublisher","Router","DefaultEventBroker"],"mappings":"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"}