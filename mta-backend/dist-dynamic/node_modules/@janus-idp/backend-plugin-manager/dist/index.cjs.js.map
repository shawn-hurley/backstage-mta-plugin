{"version":3,"file":"index.cjs.js","sources":["../src/manager/types.ts","../src/scanner/plugin-scanner.ts","../src/loader/CommonJSModuleLoader.ts","../src/manager/plugin-manager.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from 'winston';\nimport { Config } from '@backstage/config';\nimport {\n  PluginCacheManager,\n  PluginDatabaseManager,\n  PluginEndpointDiscovery,\n  TokenManager,\n  UrlReader,\n} from '@backstage/backend-common';\nimport { Router } from 'express';\nimport { PluginTaskScheduler, TaskRunner } from '@backstage/backend-tasks';\nimport { IdentityApi } from '@backstage/plugin-auth-node';\nimport { PermissionEvaluator } from '@backstage/plugin-permission-common';\nimport {\n  EventBroker,\n  HttpPostIngressOptions,\n} from '@backstage/plugin-events-node';\n\nimport { BackendFeature } from '@backstage/backend-plugin-api';\nimport { PackagePlatform, PackageRole } from '@backstage/cli-node';\nimport { CatalogBuilder } from '@backstage/plugin-catalog-backend';\nimport { TemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { IndexBuilder } from '@backstage/plugin-search-backend-node';\nimport { EventsBackend } from '@backstage/plugin-events-backend';\nimport { PermissionPolicy } from '@backstage/plugin-permission-node';\n\n/**\n * @public\n *\n * @deprecated\n *\n * Support for the legacy backend system will be removed in the future.\n *\n * When adding a legacy plugin installer entrypoint in your plugin,\n * you should always take the opportunity to also implement support\n * for the new backend system if not already done.\n *\n */\nexport type LegacyPluginEnvironment = {\n  logger: Logger;\n  cache: PluginCacheManager;\n  database: PluginDatabaseManager;\n  config: Config;\n  reader: UrlReader;\n  discovery: PluginEndpointDiscovery;\n  tokenManager: TokenManager;\n  permissions: PermissionEvaluator;\n  scheduler: PluginTaskScheduler;\n  identity: IdentityApi;\n  eventBroker: EventBroker;\n  pluginProvider: BackendPluginProvider;\n};\n\n/**\n * @public\n */\nexport interface BackendPluginProvider {\n  backendPlugins(): BackendDynamicPlugin[];\n}\n\n/**\n * @public\n */\nexport interface BaseDynamicPlugin {\n  name: string;\n  version: string;\n  role: PackageRole;\n  platform: PackagePlatform;\n}\n\n/**\n * @public\n */\nexport type DynamicPlugin = FrontendDynamicPlugin | BackendDynamicPlugin;\n\n/**\n * @public\n */\nexport interface FrontendDynamicPlugin extends BaseDynamicPlugin {\n  platform: 'web';\n}\n\n/**\n * @public\n */\nexport interface BackendDynamicPlugin extends BaseDynamicPlugin {\n  platform: 'node';\n  installer: BackendDynamicPluginInstaller;\n}\n\n/**\n * @public\n */\nexport type BackendDynamicPluginInstaller =\n  | LegacyBackendPluginInstaller\n  | NewBackendPluginInstaller;\n\n/**\n * @public\n */\nexport interface NewBackendPluginInstaller {\n  kind: 'new';\n\n  install(): BackendFeature | BackendFeature[];\n}\n\n/**\n * @public\n * @deprecated\n *\n * Support for the legacy backend system will be removed in the future.\n *\n * When adding a legacy plugin installer entrypoint in your plugin,\n * you should always take the opportunity to also implement support\n * for the new backend system if not already done.\n *\n */\nexport interface LegacyBackendPluginInstaller {\n  kind: 'legacy';\n\n  router?: {\n    pluginID: string;\n    createPlugin(env: LegacyPluginEnvironment): Promise<Router>;\n  };\n\n  catalog?(builder: CatalogBuilder, env: LegacyPluginEnvironment): void;\n  scaffolder?(env: LegacyPluginEnvironment): TemplateAction<any>[];\n  search?(\n    indexBuilder: IndexBuilder,\n    schedule: TaskRunner,\n    env: LegacyPluginEnvironment,\n  ): void;\n  events?(\n    eventsBackend: EventsBackend,\n    env: LegacyPluginEnvironment,\n  ): HttpPostIngressOptions[];\n  permissions?: {\n    policy?: PermissionPolicy;\n  };\n}\n\n/**\n * @public\n */\nexport function isBackendDynamicPluginInstaller(\n  obj: any,\n): obj is BackendDynamicPluginInstaller {\n  return (\n    obj !== undefined &&\n    'kind' in obj &&\n    (obj.kind === 'new' || obj.kind === 'legacy')\n  );\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Config } from '@backstage/config';\nimport { ScannedPluginPackage, ScannedPluginManifest } from './types';\nimport * as fs from 'fs/promises';\nimport { Stats, lstatSync } from 'fs';\nimport * as chokidar from 'chokidar';\nimport * as path from 'path';\nimport * as url from 'url';\nimport debounce from 'lodash/debounce';\nimport { PackagePlatform, PackageRoles } from '@backstage/cli-node';\nimport { LoggerService } from '@backstage/backend-plugin-api';\n\nexport class PluginScanner {\n  private readonly logger: LoggerService;\n  private backstageRoot: string;\n  readonly #config: Config;\n  private _rootDirectory?: string;\n  private readonly preferAlpha: boolean;\n  private configUnsubscribe?: () => void;\n  private rootDirectoryWatcher?: chokidar.FSWatcher;\n  private subscribers: (() => void)[] = [];\n\n  constructor(\n    config: Config,\n    logger: LoggerService,\n    backstageRoot: string,\n    preferAlpha: boolean = false,\n  ) {\n    this.backstageRoot = backstageRoot;\n    this.logger = logger;\n    this.preferAlpha = preferAlpha;\n    this.#config = config;\n\n    this.applyConfig();\n  }\n\n  subscribeToRootDirectoryChange(subscriber: () => void) {\n    this.subscribers.push(subscriber);\n  }\n\n  get rootDirectory(): string | undefined {\n    return this._rootDirectory;\n  }\n\n  private applyConfig(): void | never {\n    const dynamicPlugins = this.#config.getOptional('dynamicPlugins');\n    if (!dynamicPlugins) {\n      this.logger.info(\"'dynamicPlugins' config entry not found.\");\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (typeof dynamicPlugins !== 'object') {\n      this.logger.warn(\"'dynamicPlugins' config entry should be an object.\");\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (!('rootDirectory' in dynamicPlugins)) {\n      this.logger.warn(\n        \"'dynamicPlugins' config entry does not contain the 'rootDirectory' field.\",\n      );\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (typeof dynamicPlugins.rootDirectory !== 'string') {\n      this.logger.warn(\n        \"'dynamicPlugins.rootDirectory' config entry should be a string.\",\n      );\n      this._rootDirectory = undefined;\n      return;\n    }\n\n    const dynamicPluginsRootPath = path.isAbsolute(dynamicPlugins.rootDirectory)\n      ? path.resolve(dynamicPlugins.rootDirectory)\n      : path.resolve(this.backstageRoot, dynamicPlugins.rootDirectory);\n\n    if (\n      !path\n        .dirname(dynamicPluginsRootPath)\n        .startsWith(path.resolve(this.backstageRoot))\n    ) {\n      const nodePath = process.env.NODE_PATH;\n      const backstageNodeModules = path.resolve(\n        this.backstageRoot,\n        'node_modules',\n      );\n      if (\n        !nodePath ||\n        !nodePath.split(path.delimiter).includes(backstageNodeModules)\n      ) {\n        throw new Error(\n          `Dynamic plugins under '${dynamicPluginsRootPath}' cannot access backstage modules in '${backstageNodeModules}'.\\n` +\n            `Please add '${backstageNodeModules}' to the 'NODE_PATH' when running the backstage backend.`,\n        );\n      }\n    }\n    if (!lstatSync(dynamicPluginsRootPath).isDirectory()) {\n      throw new Error('Not a directory');\n    }\n\n    this._rootDirectory = dynamicPluginsRootPath;\n  }\n\n  async scanRoot(): Promise<ScannedPluginPackage[]> {\n    if (!this._rootDirectory) {\n      return [];\n    }\n\n    const dynamicPluginsLocation = this._rootDirectory;\n    const scannedPlugins: ScannedPluginPackage[] = [];\n    for (const dirEnt of await fs.readdir(dynamicPluginsLocation, {\n      withFileTypes: true,\n    })) {\n      const pluginDir = dirEnt;\n      const pluginHome = path.normalize(\n        path.resolve(dynamicPluginsLocation, pluginDir.name),\n      );\n      if (dirEnt.isSymbolicLink()) {\n        if (!(await fs.lstat(await fs.readlink(pluginHome))).isDirectory()) {\n          this.logger.info(\n            `skipping '${pluginHome}' since it is not a directory`,\n          );\n          continue;\n        }\n      } else if (!dirEnt.isDirectory()) {\n        this.logger.info(\n          `skipping '${pluginHome}' since it is not a directory`,\n        );\n        continue;\n      }\n\n      let scannedPlugin: ScannedPluginPackage;\n      let platform: PackagePlatform;\n      try {\n        scannedPlugin = await this.scanDir(pluginHome);\n        if (!scannedPlugin.manifest.main) {\n          throw new Error(\"field 'main' not found in 'package.json'\");\n        }\n        if (scannedPlugin.manifest.backstage?.role) {\n          platform = PackageRoles.getRoleInfo(\n            scannedPlugin.manifest.backstage.role,\n          ).platform;\n        } else {\n          throw new Error(\"field 'backstage.role' not found in 'package.json'\");\n        }\n      } catch (e) {\n        this.logger.error(\n          `failed to load dynamic plugin manifest from '${pluginHome}'`,\n          e,\n        );\n        continue;\n      }\n\n      if (platform === 'node') {\n        if (this.preferAlpha) {\n          const pluginHomeAlpha = path.resolve(pluginHome, 'alpha');\n          if ((await fs.lstat(pluginHomeAlpha)).isDirectory()) {\n            const backstage = scannedPlugin.manifest.backstage;\n            try {\n              scannedPlugin = await this.scanDir(pluginHomeAlpha);\n            } catch (e) {\n              this.logger.error(\n                `failed to load dynamic plugin manifest from '${pluginHomeAlpha}'`,\n                e,\n              );\n              continue;\n            }\n            scannedPlugin.manifest.backstage = backstage;\n          } else {\n            this.logger.warn(\n              `skipping '${pluginHomeAlpha}' since it is not a directory`,\n            );\n          }\n        }\n      }\n\n      scannedPlugins.push(scannedPlugin);\n    }\n    return scannedPlugins;\n  }\n\n  private async scanDir(pluginHome: string): Promise<ScannedPluginPackage> {\n    const manifestFile = path.resolve(pluginHome, 'package.json');\n    const content = await fs.readFile(manifestFile);\n    const manifest: ScannedPluginManifest = JSON.parse(content.toString());\n    return {\n      location: url.pathToFileURL(pluginHome),\n      manifest: manifest,\n    };\n  }\n\n  async trackChanges(): Promise<void> {\n    const setupRootDirectoryWatcher = async (): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        if (!this._rootDirectory) {\n          resolve();\n          return;\n        }\n        const callSubscribers = debounce(() => {\n          this.subscribers.forEach(s => s());\n        }, 500);\n        let ready = false;\n        this.rootDirectoryWatcher = chokidar\n          .watch(this._rootDirectory, {\n            ignoreInitial: true,\n            followSymlinks: true,\n          })\n          .on(\n            'all',\n            (\n              event: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\n              eventPath: string,\n              _: Stats | undefined,\n            ): void => {\n              if (\n                (['addDir', 'unlinkDir'].includes(event) &&\n                  path.dirname(eventPath) === this._rootDirectory) ||\n                (['add', 'unlink', 'change'].includes(event) &&\n                  path.dirname(path.dirname(eventPath)) ===\n                    this._rootDirectory &&\n                  path.basename(eventPath) === 'package.json')\n              ) {\n                this.logger.info(\n                  `rootDirectory changed (${event} - ${eventPath}): scanning plugins again`,\n                );\n                callSubscribers();\n              } else {\n                this.logger.debug(\n                  `rootDirectory changed (${event} - ${eventPath}): no need to scan plugins again`,\n                );\n              }\n            },\n          )\n          .on('error', (error: Error) => {\n            this.logger.error(\n              `error while watching '${this.rootDirectory}'`,\n              error,\n            );\n            if (!ready) {\n              reject(error);\n            }\n          })\n          .on('ready', () => {\n            ready = true;\n            resolve();\n          });\n      });\n    };\n\n    await setupRootDirectoryWatcher();\n    if (this.#config.subscribe) {\n      const { unsubscribe } = this.#config.subscribe(\n        async (): Promise<void> => {\n          const oldRootDirectory = this._rootDirectory;\n          try {\n            this.applyConfig();\n          } catch (e) {\n            this.logger.error(\n              'failed to apply new config for dynamic plugins',\n              e,\n            );\n          }\n          if (oldRootDirectory !== this._rootDirectory) {\n            this.logger.info(\n              `rootDirectory changed in Config from '${oldRootDirectory}' to '${this._rootDirectory}'`,\n            );\n            this.subscribers.forEach(s => s());\n            if (this.rootDirectoryWatcher) {\n              await this.rootDirectoryWatcher.close();\n            }\n            await setupRootDirectoryWatcher();\n          }\n        },\n      );\n      this.configUnsubscribe = unsubscribe;\n    }\n  }\n\n  async untrackChanges() {\n    if (this.rootDirectoryWatcher) {\n      this.rootDirectoryWatcher.close();\n    }\n    if (this.configUnsubscribe) {\n      this.configUnsubscribe();\n    }\n  }\n\n  destructor() {\n    this.untrackChanges();\n  }\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ModuleLoader } from './types';\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport path from 'path';\n\nexport class CommonJSModuleLoader implements ModuleLoader {\n  constructor(public readonly logger: LoggerService) {}\n\n  async bootstrap(\n    backstageRoot: string,\n    dynamicPluginsPaths: string[],\n  ): Promise<void> {\n    const allowedNodeModulesPaths = [\n      `${backstageRoot}/node_modules`,\n      ...dynamicPluginsPaths.map(p => path.resolve(p, 'node_modules')),\n    ];\n    const Module = require('module');\n    const oldNodeModulePaths = Module._nodeModulePaths;\n    Module._nodeModulePaths = (from: string): string[] => {\n      const result: string[] = oldNodeModulePaths(from);\n      if (!dynamicPluginsPaths.some(p => from.startsWith(p))) {\n        return result;\n      }\n\n      const filtered = result.filter(p => allowedNodeModulesPaths.includes(p));\n      this.logger.debug(\n        `Overriding node_modules search path for dynamic plugin ${from} to: ${filtered}`,\n      );\n      return filtered;\n    };\n  }\n\n  async load(packagePath: string): Promise<any> {\n    return await import(/* webpackIgnore: true */ packagePath);\n  }\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Config } from '@backstage/config';\nimport {\n  BackendPluginProvider,\n  BackendDynamicPlugin,\n  isBackendDynamicPluginInstaller,\n  DynamicPlugin,\n} from './types';\nimport { ScannedPluginPackage } from '../scanner';\nimport { PluginScanner } from '../scanner/plugin-scanner';\nimport { ModuleLoader } from '../loader';\nimport { CommonJSModuleLoader } from '../loader/CommonJSModuleLoader';\nimport * as url from 'url';\nimport {\n  BackendFeature,\n  LoggerService,\n  coreServices,\n  createServiceFactory,\n  createServiceRef,\n} from '@backstage/backend-plugin-api';\nimport { PackageRoles } from '@backstage/cli-node';\nimport { findPaths } from '@backstage/cli-common';\nimport path from 'path';\nimport * as fs from 'fs';\nimport {\n  FeatureDiscoveryService,\n  featureDiscoveryServiceRef,\n} from '@backstage/backend-plugin-api/alpha';\n\n/**\n * @public\n */\nexport class PluginManager implements BackendPluginProvider {\n  static async fromConfig(\n    config: Config,\n    logger: LoggerService,\n    preferAlpha: boolean = false,\n    mooduleLoader: ModuleLoader = new CommonJSModuleLoader(logger),\n  ): Promise<PluginManager> {\n    /* eslint-disable-next-line no-restricted-syntax */\n    const backstageRoot = findPaths(__dirname).targetRoot;\n    const scanner = new PluginScanner(\n      config,\n      logger,\n      backstageRoot,\n      preferAlpha,\n    );\n    const scannedPlugins = await scanner.scanRoot();\n    scanner.trackChanges();\n    const manager = new PluginManager(logger, scannedPlugins, mooduleLoader);\n\n    const dynamicPluginsPaths = scannedPlugins.map(p =>\n      fs.realpathSync(\n        path.dirname(\n          path.dirname(\n            path.resolve(url.fileURLToPath(p.location), p.manifest.main),\n          ),\n        ),\n      ),\n    );\n\n    mooduleLoader.bootstrap(backstageRoot, dynamicPluginsPaths);\n\n    scanner.subscribeToRootDirectoryChange(async () => {\n      manager._availablePackages = await scanner.scanRoot();\n      // TODO: do not store _scannedPlugins again, but instead store a diff of the changes\n    });\n    manager.plugins.push(...(await manager.loadPlugins()));\n\n    return manager;\n  }\n\n  readonly plugins: DynamicPlugin[];\n  private _availablePackages: ScannedPluginPackage[];\n\n  private constructor(\n    private readonly logger: LoggerService,\n    private packages: ScannedPluginPackage[],\n    private readonly moduleLoader: ModuleLoader,\n  ) {\n    this.plugins = [];\n    this._availablePackages = packages;\n  }\n\n  get availablePackages(): ScannedPluginPackage[] {\n    return this._availablePackages;\n  }\n\n  addBackendPlugin(plugin: BackendDynamicPlugin): void {\n    this.plugins.push(plugin);\n  }\n\n  private async loadPlugins(): Promise<DynamicPlugin[]> {\n    const loadedPlugins: DynamicPlugin[] = [];\n\n    for (const scannedPlugin of this.packages) {\n      const platform = PackageRoles.getRoleInfo(\n        scannedPlugin.manifest.backstage.role,\n      ).platform;\n\n      if (\n        platform === 'node' &&\n        scannedPlugin.manifest.backstage.role.includes('-plugin')\n      ) {\n        const plugin = await this.loadBackendPlugin(scannedPlugin);\n        if (plugin !== undefined) {\n          loadedPlugins.push(plugin);\n        }\n      } else {\n        loadedPlugins.push({\n          name: scannedPlugin.manifest.name,\n          version: scannedPlugin.manifest.version,\n          role: scannedPlugin.manifest.backstage.role,\n          platform: 'web',\n          // TODO(davidfestal): add required front-end plugin information here.\n        });\n      }\n    }\n    return loadedPlugins;\n  }\n\n  private async loadBackendPlugin(\n    plugin: ScannedPluginPackage,\n  ): Promise<BackendDynamicPlugin | undefined> {\n    const packagePath = url.fileURLToPath(\n      `${plugin.location}/${plugin.manifest.main}`,\n    );\n    try {\n      const { dynamicPluginInstaller } = await this.moduleLoader.load(\n        packagePath,\n      );\n      if (!isBackendDynamicPluginInstaller(dynamicPluginInstaller)) {\n        this.logger.error(\n          `dynamic backend plugin '${plugin.manifest.name}' could not be loaded from '${plugin.location}': the module should export a 'const dynamicPluginInstaller: BackendDynamicPluginInstaller' field.`,\n        );\n        return undefined;\n      }\n      this.logger.info(\n        `loaded dynamic backend plugin '${plugin.manifest.name}' from '${plugin.location}'`,\n      );\n      return {\n        name: plugin.manifest.name,\n        version: plugin.manifest.version,\n        platform: 'node',\n        role: plugin.manifest.backstage.role,\n        installer: dynamicPluginInstaller,\n      };\n    } catch (error) {\n      this.logger.error(\n        `an error occured while loading dynamic backend plugin '${plugin.manifest.name}' from '${plugin.location}'`,\n        error,\n      );\n      return undefined;\n    }\n  }\n\n  backendPlugins(): BackendDynamicPlugin[] {\n    return this.plugins.filter(\n      (p): p is BackendDynamicPlugin => p.platform === 'node',\n    );\n  }\n}\n\n/**\n * @public\n */\nexport const dynamicPluginsServiceRef = createServiceRef<BackendPluginProvider>(\n  {\n    id: 'core.dynamicplugins',\n    scope: 'root',\n  },\n);\n\n/**\n * @public\n */\nexport interface DynamicPluginsFactoryOptions {\n  moduleLoader?(logger: LoggerService): ModuleLoader;\n}\n\n/**\n * @public\n */\nexport const dynamicPluginsServiceFactory = createServiceFactory(\n  (options?: DynamicPluginsFactoryOptions) => ({\n    service: dynamicPluginsServiceRef,\n    deps: {\n      config: coreServices.rootConfig,\n      logger: coreServices.rootLogger,\n    },\n    async factory({ config, logger }) {\n      if (options?.moduleLoader) {\n        return await PluginManager.fromConfig(\n          config,\n          logger,\n          true,\n          options.moduleLoader(logger),\n        );\n      }\n      return await PluginManager.fromConfig(config, logger, true);\n    },\n  }),\n);\n\nclass DynamicPluginsEnabledFeatureDiscoveryService\n  implements FeatureDiscoveryService\n{\n  constructor(\n    private readonly dynamicPlugins: BackendPluginProvider,\n    private readonly featureDiscoveryService?: FeatureDiscoveryService,\n  ) {}\n\n  async getBackendFeatures(): Promise<{ features: Array<BackendFeature> }> {\n    const staticFeatures =\n      (await this.featureDiscoveryService?.getBackendFeatures())?.features ??\n      [];\n\n    return {\n      features: [\n        ...this.dynamicPlugins\n          .backendPlugins()\n          .flatMap((plugin): BackendFeature[] => {\n            if (plugin.installer.kind === 'new') {\n              const installed = plugin.installer.install();\n              if (Array.isArray(installed)) {\n                return installed;\n              }\n              return [installed];\n            }\n            return [];\n          }),\n        ...staticFeatures,\n      ],\n    };\n  }\n}\n\n/**\n * @public\n */\nexport const dynamicPluginsFeatureDiscoveryServiceFactory =\n  createServiceFactory({\n    service: featureDiscoveryServiceRef,\n    deps: {\n      config: coreServices.rootConfig,\n      dynamicPlugins: dynamicPluginsServiceRef,\n    },\n    factory({ dynamicPlugins }) {\n      return new DynamicPluginsEnabledFeatureDiscoveryService(dynamicPlugins);\n    },\n  });\n"],"names":["__publicField","path","lstatSync","fs","PackageRoles","url","debounce","chokidar","findPaths","createServiceRef","createServiceFactory","coreServices","featureDiscoveryServiceRef"],"mappings":"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"}